1.  App log  업그레이드  #
: 필요시스템
- 실습용 ec2
- RDS(MariaDB) 

1.1. Api Gateway 설정 - V2 

HTTP HEADER 
Name : Content-Type	
Mapped from : 'application/x-amz-json-1.1'


Content-Type : application/json

#set ( $enter = "
")
#set($json = "$input.json('$')$enter")
{
"Data": "$util.base64Encode("$json")",
"PartitionKey": "$input.params('X-Amzn-Trace-Id')",
"StreamName": "$input.params('stream-name')"
}

1.2. 테스트 : stream-name 을 변수처리 해서 작동하는 것을 확인한다. 
$ curl -d "{\"value\":\"30\",\"type\":\"Tip 3\"}" -H "Content-Type: application/json" -X POST https://xxxf8.execute-api.ap-northeast-2.amazonaws.com/PROD/v1/class

1.2. streamlit 설치하기 
$ python3 --version 
$ sudo yum install pip -y 
$ pip install streamlit 
$ streamlit hello 


1.3. streamlit 프로그램 실행 

$ vi event_click_log.py 
import streamlit as st
import requests
import datetime
import json


button_style = """
    padding: 10px 20px; /* Adjust padding to change button size */
    font-size: 16px;   /* Adjust font size */
    width: 80%;
"""

st.markdown(f'<style>{button_style}</style>', unsafe_allow_html=True)



# Function to send a POST request based on the button clicked

def send_post_request(event_params):
  # url = "https://kuxxxbyf8.execute-api.ap-northeast-2.amazonaws.com/PROD/v1/class1"
  url = "https://z8xxx7el.execute-api.ap-northeast-2.amazonaws.com/PROD/v2/class1"
  json_data = json.dumps(event_params)
  response = requests.post(url, data=json_data, headers={'Content-Type': 'application/json'})


# 현재 날짜 및 시간을 얻습니다.
current_time = datetime.datetime.now()

# 현재 날짜 및 시간을 long 값으로 변환 (Unix 시간의 밀리초 버전)
long_timestamp = int(current_time.timestamp() * 1000)
print("Long 값:", long_timestamp)
# 현재 시간을 원하는 형식으로 출력
formatted_time = current_time.strftime("%Y-%m-%d %H:%M:%S")
print("현재 시간 (형식화):", formatted_time)


# Define your event data
event_data = [
    {'event_name':'zb_app_install','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10310425','screen_name':'권한 요청','FALSE':'phone_id'} , 
    {'event_name':'view_item','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10442413','screen_name':'내정보','':'phone_id'} , 
    {'event_name':'zb_dialog_show','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10493118','screen_name':'내정보 번호변경','':'phone_id'} , 
    {'event_name':'zb_screen_list_click','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10465756','screen_name':'내정보 비밀번호변경','':'phone_id'} , 
    {'event_name':'oneroom_filter_results','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10420590','screen_name':'내정보 이름변경','':'phone_id'} , 
    {'event_name':'zb_app_install','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10238586','screen_name':'로그인','':'phone_id'} , 
    {'event_name':'screen_view','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10432617','screen_name':'로그인 비밀번호찾기','':'phone_id'} , 
    {'event_name':'zb_vr_loading','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10435194','screen_name':'로그인 이메일','':'phone_id'} , 
    {'event_name':'zb_view_contents','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10456187','screen_name':'로그인 이메일찾기','':'phone_id'} , 
    {'event_name':'user_engagement','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10440393','screen_name':'로그인 이메일확인','':'phone_id'} , 
    {'event_name':'zb_screen_click','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10478202','screen_name':'로그인 인증','':'phone_id'} , 
    {'event_name':'sign_up','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10446125','screen_name':'메인','':'phone_id'} , 
    {'event_name':'apt_filter_results','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10469918','screen_name':'문의하기','':'phone_id'} , 
    {'event_name':'session_start','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10171775','screen_name':'문자보내기','':'phone_id'} , 
    {'event_name':'view_item','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10450963','screen_name':'스플래시','':'phone_id'} , 
    {'event_name':'ecommerce_purchase','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10393346','screen_name':'아파트 검색','':'phone_id'} , 
    {'event_name':'add_to_wishlist','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10454369','screen_name':'아파트 교통정보상세','':'phone_id'} , 
    {'event_name':'first_open','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10281808','screen_name':'아파트 단지목록','':'phone_id'} , 
    {'event_name':'zb_screen_view','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10473864','screen_name':'아파트 리뷰등록','':'phone_id'} , 
    {'event_name':'zb_way_searching','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10455493','screen_name':'아파트 리뷰목록','':'phone_id'} , 
    {'event_name':'zb_vr_moving','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10409337','screen_name':'아파트 매물','':'phone_id'} , 
    {'event_name':'_exp_set','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10408885','screen_name':'아파트 매물내놓기','':'phone_id'} , 
    {'event_name':'gtm.load','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'9581516','screen_name':'아파트 매물목록','':'phone_id'} , 
    {'event_name':'add_to_cart','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10374993','screen_name':'아파트 매물상세','':'phone_id'} , 
    {'event_name':'view_search_results','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10341308','screen_name':'아파트 매물필터','':'phone_id'} , 
    {'event_name':'zb_screen_list_state','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10338845','screen_name':'아파트 면적유형상세','':'phone_id'} , 
    {'event_name':'zb_screen_map_click','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10273273','screen_name':'아파트 문의한매물','':'phone_id'} , 
    {'event_name':'zb_way_searching','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10310425','screen_name':'아파트 상세','':'phone_id'} , 
    {'event_name':'zb_vr_moving','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10442413','screen_name':'아파트 수정요청등록','':'phone_id'} , 
    {'event_name':'_exp_set','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10493118','screen_name':'아파트 시세변동필터','':'phone_id'} , 
    {'event_name':'gtm.load','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10465756','screen_name':'아파트 시세정보상세','':'phone_id'} , 
    {'event_name':'add_to_cart','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10420590','screen_name':'아파트 시세지도','':'phone_id'} , 
    {'event_name':'view_search_results','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10238586','screen_name':'아파트 시세필터','':'phone_id'} , 
    {'event_name':'zb_screen_list_state','gtmLongTime':long_timestamp,'base_dt':formatted_time,'item_id':'10432617','screen_name':'아파트 실거래이력','':'phone_id'} 
]

# Number of columns in the grid
num_columns = 4

# Streamlit app title
st.title("Event Data \n Post Request Button Grid")

# Create a button grid
for i in range(0, len(event_data), num_columns):
    button_row = event_data[i:i+num_columns]
    # col1, col2, col3, col4,col5,col6,col7,col8 = st.columns(num_columns)
    col1, col2, col3, col4 = st.columns(num_columns)
    for j, event_params in enumerate(button_row):
        with globals()[f"col{j+1}"]:
            if st.button(event_params['screen_name'], key=event_params['screen_name']):
                send_post_request(event_params)


# 실시간 테스트용
# 매물상세 클릭에 대한 내용만 모아준다. 


